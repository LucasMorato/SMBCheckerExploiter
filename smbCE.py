#!/usr/bin/env python3

import os
#instala o python-nmap
os.system('pip install python-nmap' + ' > /dev/null')
#instala o tree
os.system('sudo apt-get install tree' + ' > /dev/null')

import sys
import nmap
import time

def scan(host):
            
    #criando um scanner
    scanner = nmap.PortScanner()

    #verificando as portas
    scanner.scan(host, '139,445')
    
    #imprimindo o status da porta 139
    time.sleep(3)
    port_139_status = scanner[host]['tcp'][139]['state']
    print('Port 139 Status:', port_139_status)
    
    #checka o status da porta 139
    if port_139_status == 'filtered' or port_139_status == 'closed':
        pass

    #imprimindo o status da porta 455
    time.sleep(3)
    port_445_status = scanner[host]['tcp'][445]['state']
    print('Port 445 Status:', port_445_status)

    #status da porta 445, se fechada para o script
    if port_445_status == 'filtered' or port_445_status == 'closed':
        print('As portas 139 e 445 não estão aberta. O host não está vulnerável ao ataque SMB.')
        quit()
     
    #clonando a ferramenta enum4linux-ng
    
    os.system('git clone https://github.com/cddmp/enum4linux-ng.git 2> /dev/null')
    os.system('pip3 install -r enum4linux-ng/requirements.txt > /dev/null')    
    
    #coleta informações do alvo caso esteja vulnerável.
    os.system(f'enum4linux-ng/./enum4linux-ng.py {host} -A')

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print('Parâmetros incorretos. Por favor utilize \"--target <host>\"')
        exit(1)

    if sys.argv[1] == '--target':
        host = sys.argv[2]
        result = scan(host)        
    else:
        print('Parâmetros incorretos. Por favor utilize \"--target <host>\"')
        exit(1)
